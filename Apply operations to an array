Given a 0-indexed array nums of size n, consisting of non-negative integers, apply n - 1 operations to the array. 
In each operation, if nums[i] is equal to nums[i + 1], multiply nums[i] by 2 and set nums[i + 1] to 0. 
Finally, shift all the 0's to the end of the array. Return the resulting array.

#include <iostream>
#include<bits/stdc++.h>

using namespace std;

vector<int> apply(vector<int>& nums) {
        for(int i=0;i<nums.size()-1;i++)
        {
            if(nums[i]==nums[i+1])
            {
                nums[i]*=2;
                nums[i+1]=0;
            }
        }
        vector<int> ans;
        for(int i=0;i<nums.size();i++)
        {


            if(nums[i]!=0)
            {
                ans.push_back(nums[i]);
            }
        }
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==0)
            {
                ans.push_back(nums[i]);
            }
        }
        return ans;
    }
int main()
{
    vector<int>nums={1,2,2,1,1,0};
    vector<int> result = apply(nums);
    for (int num : result) {
        cout << num << " ";
    }
    return 0;
}
